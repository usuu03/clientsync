// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String  @id @default(uuid())
  email  String  @unique
  password String
  name String
  role Role @default(User)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]
  messages Message[]
}

enum Role{
  ADMIN
  User
  CLIENT
}

model Client{
  id String  @id @default(uuid())
  name String
  email  String  @unique
  phone String?
  company String?
  notes String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects Project[]

}

model Project {
  id String @id @default(uuid())
  name String
  description String?
  status String @default("active")
  startDate DateTime?
  endDate DateTime?


  clientId String
  client Client @relation(fields: [clientId], references: [id])

  ownerId String
  owner User @relation(fields: [ownerId], references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  files File[]
  messages Message[]
  invoinces Invoice[]
}

model File{
  id String @id @default(uuid())
  filename String
  url String
  uploadedAt DateTime @default(now())

  projectId String
  project Project @relation(fields: [projectId], references: [id])
}


model Message{
  id String @id @default(uuid())
  content String
  sentAt DateTime @default(now())

  projectId String
  project Project @relation(fields: [projectId], references: [id])

  userId String
  user User @relation(fields: [userId], references: [id])
}


model Invoice {
  id String @id @default(uuid())
  stripeId String @unique
  amount Float
  status String @default("pending")
  createdAt DateTime @default(now())

  projectId String
  project Project @relation(fields: [projectId], references: [id])
}